{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "zoneName": {
            "type": "string",
            "metadata": {
                "description": "The name of the DNS zone to be created.  Must have at least 2 segments, e.g. hostname.org"
            }
        },
        "cnames": {
            "type": "array",
            "metadata": {
                "description": "An array of cNames for the zoneName, i.e Name:test would create test.zoneName with the alias pointing to the required endpoint"
            }
        },
        "aRecords": {
            "type": "array",
            "metadata": {
                "description": "An array of values for A Record settings"
            }
        },
        "mxRecords": {
            "type": "array",
            "metadata": {
                "description": "An array of values for MX Record settings"
            }
        },
        "txtRecords": {
            "type": "array",
            "metadata": {
                "description": "An array of values for TXT Record settings"
            }
        },
        "srvRecords": {
            "type": "array",
            "metadata": {
                "description": "An array of values for SRV Record settings"
            }
        },
        "vNetLinks": {
            "type": "array",
            "metadata": {
                "description": "An array of vNets to Link SubNets to"
            }
        },
        "environment": {
            "type": "string",
            "metadata": {
                "description": "The environment the cluster belongs to"
            }
        },
        "buildver": {
            "type": "string",
            "metadata": {
                "description": "The Number of the DevOps Pipeline Build "
            }
        }
    },
    "variables": {
        "tagsvar": {
            "environment": "[parameters('environment')]",
            "buildver": "[parameters('buildver')]"
        },
        "cnamesEmptyWorkaround": {
            "true": "[parameters('cnames')]",
            "false": [
                {
                    "name": "cnamesEmptyWorkaround",
                    "ttl": 1,
                    "alias": "lorem"
                }
            ]
        },
        "cnameCounter": "[variables('cnamesEmptyWorkaround')[string(greater(length(parameters('cnames')), 0))]]",
        "aRecordsEmptyWorkaround": {
            "true": "[parameters('aRecords')]",
            "false": [
                {
                    "name": "lorem",
                    "ttl": 1,
                    "records": [
                        {
                            "ipv4Address": "23.100.50.51"
                        }
                    ]
                }
            ]
        },
        "aRecordsCounter": "[variables('aRecordsEmptyWorkaround')[string(greater(length(parameters('aRecords')), 0))]]",
        "mxRecordsEmptyWorkaround": {
            "true": "[parameters('mxRecords')]",
            "false": [
                {
                    "ttl": 1,
                    "records": [
                        {
                            "exchange": "dummy.info.com",
                            "preference": 1
                        }
                    ]
                }
            ]
        },
        "mxRecordsCounter": "[variables('mxRecordsEmptyWorkaround')[string(greater(length(parameters('mxRecords')), 0))]]",
        "txtRecordsEmptyWorkaround": {
            "true": "[parameters('txtRecords')]",
            "false": [
                {
                    "name": "@",
                    "ttl": 1,
                    "records": [
                        {
                            "value": [
                                "v=spf1 include:dummy.value -all"
                            ]
                        }
                    ]
                }
            ]
        },
        "txtRecordsCounter": "[variables('txtRecordsEmptyWorkaround')[string(greater(length(parameters('txtRecords')), 0))]]",
        "srvRecordsEmptyWorkaround": {
            "true": "[parameters('srvRecords')]",
            "false": [
                {
                    "ttl": 1,
                    "name": "dummy",
                    "port": 1,
                    "priority": 1,
                    "target": "dummy.info.com",
                    "weight": 1
                }
            ]
        },
        "srvRecordsCounter": "[variables('srvRecordsEmptyWorkaround')[string(greater(length(parameters('srvRecords')), 0))]]",
        "vNetLinksEmptyWorkaround": {
            "true": "[parameters('vNetLinks')]",
            "false": [
                {
                    "vNetNameToLink": "test-vnet-name"
                }
            ]
        },
        "vNetLinksCounter": "[variables('vNetLinksEmptyWorkaround')[string(greater(length(parameters('vNetLinks')), 0))]]"
    },
    "resources": [
        {
            "name": "[parameters('zoneName')]",
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "location": "global",
            "properties": {
            },
            "tags": "[variables('tagsvar')]"
        },
        {
            "condition": "[greater(length(parameters('cnames')), 0)]",
            "name": "[concat(parameters('zoneName'), '/', variables('cnameCounter')[copyIndex()].name)]",
            "type": "Microsoft.Network/privateDnsZones/CNAME",
            "apiVersion": "2018-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
            ],
            "properties": {
                "ttl": "[variables('cnameCounter')[copyIndex()].ttl]",
                "cnameRecord": {
                    "cname": "[variables('cnameCounter')[copyIndex()].alias]"
                }
            },
            "copy": {
                "name": "cnameCopy",
                "count": "[length(variables('cnameCounter'))]"
            }
        },
        {
            "condition": "[greater(length(parameters('aRecords')), 0)]",
            "name": "[concat(parameters('zoneName'), '/', variables('aRecordsCounter')[copyIndex()].name)]",
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
            ],
            "properties": {
                "name": "[variables('aRecordsCounter')[copyIndex()].name]",
                "ttl": "[variables('aRecordsCounter')[copyIndex()].ttl]",
                "aRecords": "[variables('aRecordsCounter')[copyIndex()].records]"
            },
            "copy": {
                "name": "aRecordsCopy",
                "count": "[length(variables('aRecordsCounter'))]"
            }
        },
        {
            "condition": "[greater(length(parameters('mxRecords')), 0)]",
            "name": "[concat(parameters('zoneName'),'/','@')]",
            "type": "Microsoft.Network/privateDnsZones/MX",
            "apiVersion": "2018-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
            ],
            "properties": {
                "ttl": "[variables('mxRecordsCounter')[copyIndex()].ttl]",
                "mxRecords": "[variables('mxRecordsCounter')[copyIndex()].records]"
            },
            "copy": {
                "name": "mxCopy",
                "count": "[length(variables('mxRecordsCounter'))]"
            }
        },
        {
            "condition": "[greater(length(parameters('txtRecords')), 0)]",
            "name": "[concat(parameters('zoneName'),'/',variables('txtRecordsCounter')[copyIndex()].name)]",
            "type": "Microsoft.Network/privateDnsZones/TXT",
            "apiVersion": "2018-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
            ],
            "properties": {
                "ttl": "[variables('txtRecordsCounter')[copyIndex()].ttl]",
                "txtRecords": "[variables('txtRecordsCounter')[copyIndex()].records]"
            },
            "copy": {
                "name": "txtCopy",
                "count": "[length(variables('txtRecordsCounter'))]"
            }
        },
        {
            "condition": "[greater(length(parameters('srvRecords')), 0)]",
            "name": "[concat(parameters('zoneName'),'/', variables('srvRecordsCounter')[copyIndex()].name)]",
            "type": "Microsoft.Network/privateDnsZones/SRV",
            "apiVersion": "2018-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
            ],
            "properties": {
                "ttl": "[variables('srvRecordsCounter')[copyIndex()].ttl]",
                "srvRecords": [
                    {
                        "port": "[variables('srvRecordsCounter')[copyIndex()].port]",
                        "priority": "[variables('srvRecordsCounter')[copyIndex()].priority]",
                        "target": "[variables('srvRecordsCounter')[copyIndex()].target]",
                        "weight": "[variables('srvRecordsCounter')[copyIndex()].weight]"
                    }
                ]
            },
            "copy": {
                "name": "srvCopy",
                "count": "[length(variables('srvRecordsCounter'))]"
            }
        },
        {
            "condition": "[greater(length(parameters('vNetLinks')), 0)]",
            "name": "[concat(parameters('zoneName'),'/vnet', parameters('environment'), variables('vNetLinksCounter')[copyIndex()].vNetNameToLink, '-', 'link')]",
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetLinksCounter')[copyIndex()].vNetNameToLink)]"
                }
            },
            "copy": {
                "name": "linkCopy",
                "count": "[length(variables('vNetLinksCounter'))]"
            }
        }
    ]
}